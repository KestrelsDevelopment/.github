name: "Parse and Build Nix Files"

on:
    workflow_call:

permissions:
    contents: read

jobs:
  parse:
    name: Parse
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Run nix-instantiate
        run: |
          set -euo pipefail

          failures=0

          for cfg in $(git ls-files '*.nix'); do
            if nix-instantiate --parse $cfg > /dev/null; then
              echo "  ✓ $cfg"
            else
              echo "  ✗ $cfg"
              failures=$((failures+1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures files failed parsing."
            exit 1
          else
            echo -e "\n✅ All files parsed successfully!"
          fi

  build-current:
    name: Build with current flakes
    needs: [ parse ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run nix flake check
        env:
          NIX_CONFIG: "experimental-features = nix-command flakes"
        run: |
          set -euo pipefail

          failures=0

          for cfg in $(git ls-files '*devices/*/flake.nix'); do
            echo -e "\n→ Building $cfg"

            flakeDir=$(dirname "$cfg")

            if nix flake check "./$flakeDir" --quiet --no-update-lock-file >/dev/null; then
              echo "  ✓ $cfg"
            else
              echo "  ✗ $cfg"
              failures=$((failures+1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures device config(s) failed validation."
            exit 1
          else
            echo -e "\n✅ All device configs passed!"
          fi

  build-updated:
    name: Build with updated flakes
    needs: [ parse ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Run nix flake check
        env:
          NIX_CONFIG: "experimental-features = nix-command flakes"
        run: |
          set -euo pipefail

          failures=0

          for cfg in $(git ls-files '*devices/*/flake.nix'); do
            echo -e "\n→ Building $cfg"

            flakeDir=$(dirname "$cfg")

            if nix flake check "./$flakeDir" --quiet >/dev/null; then
              echo "  ✓ $cfg"
            else
              echo "  ✗ $cfg"
              failures=$((failures+1))
            fi
            git restore .
            git clean -fdx
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures device config(s) failed validation."
            exit 1
          else
            echo -e "\n✅ All device configs passed!"
          fi
