name: "Lint Files"

on:
    workflow_call:

permissions:
    contents: read

jobs:
  lint-nix:
    name: Lint Nix Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Run nixfmt --check
        run: |
          set -euo pipefail

          failures=0

          for cfg in $(git ls-files '*.nix'); do
            if nix run nixpkgs#nixfmt-rfc-style -- --check --indent=4 $cfg >/dev/null 2>/dev/null; then
              echo "  ✓ $cfg"
            else
              echo "  ✗ $cfg"
              failures=$((failures+1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures files failed linting."
            exit 1
          else
            echo -e "\n✅ All files passed linting!"
          fi

  lint-bash:
    name: Lint-Bash
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y shellcheck

      - name: Run ShellCheck
        run: |
          set -euo pipefail

          failures=0

          for script in $(git ls-files '*.sh'); do
            if shellcheck "$script"; then
              echo "  ✓ $script"
            else
              echo "  ✗ $script"
              failures=$((failures+1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures files failed linting."
            exit 1
          else
            echo -e "\n✅ All files passed linting!"
          fi

  lint-zsh:
    name: Lint-Zsh
    runs-on: ubuntu-latest
    needs: lint-bash
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Zsh
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y zsh

      - name: Syntax check files with Zsh
        run: |
          set -euo pipefail

          failures=0

          for script in $(git ls-files '*.sh'); do
            if zsh -n "$script"; then
              echo "  ✓ $script"
            else
              echo "  ✗ $script"
              failures=$((failures+1))
            fi
          done

          if [ "$failures" -ne 0 ]; then
            echo -e "\n❌ $failures files failed zsh syntax check."
            exit 1
          else
            echo -e "\n✅ All files passed zsh syntax check!"
          fi